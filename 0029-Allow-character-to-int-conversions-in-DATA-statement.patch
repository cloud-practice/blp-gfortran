From 626c3ef4570cb72ee73f970172e1eab2458bbc99 Mon Sep 17 00:00:00 2001
From: Jim MacArthur <jim.macarthur@codethink.co.uk>
Date: Wed, 7 Oct 2015 18:23:31 -0400
Subject: [PATCH 29/46] Allow character-to-int conversions in DATA statements

---
 gcc/fortran/decl.c | 2 +-
 gcc/fortran/expr.c | 3 +++
 2 files changed, 4 insertions(+), 1 deletion(-)

diff --git a/gcc/fortran/decl.c b/gcc/fortran/decl.c
index bdde119..c88cbb5 100644
--- a/gcc/fortran/decl.c
+++ b/gcc/fortran/decl.c
@@ -1857,7 +1857,7 @@ variable_decl (int elem)
   cl_match = MATCH_NO;
 
   /* Check for a character length clause before an array clause */
-  if (gfc_option.flag_oracle_support && current_ts.type == BT_CHARACTER)
+  if (gfc_option.allow_std & GFC_STD_EXTRA_LEGACY && current_ts.type == BT_CHARACTER)
     {
       cl_match = match_character_length_clause( &cl, &cl_deferred, elem );
       if (cl_match == MATCH_ERROR)
diff --git a/gcc/fortran/expr.c b/gcc/fortran/expr.c
index 0e89a4c..6e17813 100644
--- a/gcc/fortran/expr.c
+++ b/gcc/fortran/expr.c
@@ -3258,6 +3258,9 @@ gfc_check_assign (gfc_expr *lvalue, gfc_expr *rvalue, int conform)
 	  || rvalue->ts.type == BT_HOLLERITH)
 	return SUCCESS;
 
+      if (gfc_option.allow_std & GFC_STD_EXTRA_LEGACY && gfc_numeric_ts (&lvalue->ts) && rvalue->ts.type == BT_CHARACTER)
+	return SUCCESS;
+
       if (lvalue->ts.type == BT_LOGICAL && rvalue->ts.type == BT_LOGICAL)
 	return SUCCESS;
 
-- 
1.9.1

