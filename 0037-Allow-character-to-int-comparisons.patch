From 3dfcf1030cc6f85df47965c4c6cfffc3848a0fe7 Mon Sep 17 00:00:00 2001
From: Jim MacArthur <jim.macarthur@codethink.co.uk>
Date: Tue, 17 Nov 2015 15:05:02 +0000
Subject: [PATCH 37/46] Allow character-to-int comparisons.

---
 gcc/fortran/resolve.c | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/gcc/fortran/resolve.c b/gcc/fortran/resolve.c
index 11780b8..3d36ed3 100644
--- a/gcc/fortran/resolve.c
+++ b/gcc/fortran/resolve.c
@@ -4103,19 +4103,19 @@ resolve_operator (gfc_expr *e)
 	  break;
 	}
 
-
-      if(gfc_option.allow_std & GFC_STD_EXTRA_LEGACY && gfc_numeric_ts(&op1->ts) && op2->ts.type == BT_HOLLERITH)
+      /* Numeric to hollerith comparisons */
+      if(gfc_option.allow_std & GFC_STD_EXTRA_LEGACY && gfc_numeric_ts(&op1->ts) && (op2->ts.type == BT_HOLLERITH || op2->ts.type == BT_CHARACTER))
 	{
-	  gfc_warning("Promoting argument for comparison from HOLLERITH to INTEGER at %L", &op2->where);
+	  gfc_warning("Promoting argument for comparison from character type to INTEGER at %L", &op2->where);
 	  gfc_typespec ts;
 	  ts.type = BT_INTEGER;
 	  ts.kind = 4;
 	  gfc_convert_type_warn (op2, &ts, 2, 1);
 	}
 
-      if(gfc_option.allow_std & GFC_STD_EXTRA_LEGACY && gfc_numeric_ts(&op2->ts) && op1->ts.type == BT_HOLLERITH)
+      if(gfc_option.allow_std & GFC_STD_EXTRA_LEGACY && gfc_numeric_ts(&op2->ts) && (op1->ts.type == BT_HOLLERITH || op1->ts.type == BT_CHARACTER))
 	{
-	  gfc_warning("Promoting argument for comparison from HOLLERITH to INTEGER at %L", &op1->where);
+	  gfc_warning("Promoting argument for comparison from character type to INTEGER at %L", &op1->where);
 	  gfc_typespec ts;
 	  ts.type = BT_INTEGER;
 	  ts.kind = 4;
-- 
1.9.1

